name: React.js Pipeline-CI

on:
  push:
    branches:
      - main

jobs:
  frontend-code-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quiz-app
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        working-directory: ./quiz-app
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true 

      - name: Build
        run: npm run build
        working-directory: ./quiz-app

  frontend-image-build:
    needs: frontend-code-build
    runs-on: ubuntu-latest
    permissions:
      contents: read 
      security-events: write 
      actions: read
    steps:
    - uses: actions/checkout@v4
    
    - name: Build and push backend Docker image
      working-directory: ./quiz-app
      run: |
        docker build . -t ${{ secrets.DOCKER_USERNAME }}/quiz-app-frontend:${{ github.sha }}  # Use github.sha directly
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin 
        docker push ${{ secrets.DOCKER_USERNAME }}/quiz-app-frontend:${{ github.sha }}   

  backend-code-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4
  
      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4
  
      - name: Install project dependencies 
        working-directory: ./backend
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true 

  backend-image-build:
    needs: backend-code-build
    runs-on: ubuntu-latest
    permissions:
      contents: read 
      security-events: write 
      actions: read
    steps:
    - uses: actions/checkout@v4
    
    - name: Build and push backend Docker image
      working-directory: ./backend
      run: |
        docker build . -t ${{ secrets.DOCKER_USERNAME }}/quiz-app-backend:${{ github.sha }} # Use github.sha directly
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin 
        docker push ${{ secrets.DOCKER_USERNAME }}/quiz-app-backend:${{ github.sha }}
  
  update-kube-manifests:
    needs: [frontend-image-build, backend-image-build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Update Kubernetes manifests
      run: |
        git clone https://github.com/life-in-devops/DevSecOps-Quiz-App-Project-Kubernetes-Manifests.git
        cd DevSecOps-Quiz-App-Project-Kubernetes-Manifests/kubernetes-manifest
        git checkout main

        sudo apt-get update && sudo apt-get install -y yq gettext

        # Create template files with placeholders
        cat <<EOF > frontend.yaml.template
        .spec.template.spec.containers[].image: \$DOCKER_USERNAME/quiz-app-frontend:\$IMAGE_TAG
        EOF

        cat <<EOF > backend.yaml.template
        .spec.template.spec.containers[].image: \$DOCKER_USERNAME/quiz-app-backend:\$IMAGE_TAG
        EOF

        # Substitute variables and update YAML files
        export DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
        export IMAGE_TAG="${{ github.sha }}"

        envsubst < frontend.yaml.template | yq eval '' frontend.yaml > frontend.yaml.new # Corrected yq command
        mv frontend.yaml.new frontend.yaml

        envsubst < backend.yaml.template | yq eval '' backend.yaml > backend.yaml.new # Corrected yq command
        mv backend.yaml.new backend.yaml

        echo "After update:"
        cat frontend.yaml backend.yaml

        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

        git add -A
        git status

        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Updated frontend and backend images to ${IMAGE_TAG}"
          git push https://${{ secrets.PAT_TOKEN }}@github.com/life-in-devops/DevSecOps-Quiz-App-Project-Kubernetes-Manifests.git main
        fi
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Set as environment variable
    